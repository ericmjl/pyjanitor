# Good example resources
# https://riggaroo.dev/using-github-actions-to-automate-our-release-process/
# https://blog.eizinger.io/12274/using-github-actions-to-automate-gitflow-style-releases

name: Auto-release

on:

  # The below workflow_dispatch section  is for a "manual" kick off of the
  # auto-release script. To cut a new release, navigate to the Actions section
  # of the repo and select this workflow (Auto-release) on the right hand side
  # Then, click "Run workflow" and you will be prompted to input the new
  # version (which should be 'major', 'minor', or 'patch').
  workflow_dispatch:
    inputs:
      versionName:
        description: "One of 'major', 'minor', or 'patch'"
        required: true

jobs:
  release:
    name: Create a new release
    runs-on: ubuntu-latest

    steps:
      # Do we need this step? If so, how to safely inject username/password?
      - name: Make a pypirc file
        run: |
          touch ~/.pypirc

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Pull latest commits of dev branch
        run: |
          git checkout dev
          git pull

      # See https://github.com/marketplace/actions/wait-on-check
      - name: Ensure all tests are passong on dev
        uses: lewagon/wait-on-check-action@v0.2
        with:
          ref: dev  # can be commit SHA or tag
          check-name: pyjanitor tests
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 60  # seconds

      # See https://github.com/thomaseizinger/keep-a-changelog-new-release
      - name: Update Changelog
        uses: thomaseizinger/keep-a-changelog-new-release@v1
        with:
          version: ${{ github.event.inputs.versionName }}

      - name: Setup Python
        uses: actions/setup-python@v2

      - name: Install bump2version
        run: python -m pip install bumpversion  # installs bump2version

      - name: Dry run bumpversion
        run: |
          bumpversion --dry-run ${{ github.event.inputs.versionName }} --allow-dirty --verbose

      - name: Commit CHANGELOG updates
        run: |
          git add .
          git commit -m "Update CHANGELOG for auto-release ${{ github.event.inputs.versionName }}"

      - name: Ensure repo status is clean
        run: git status

      - name: Run bumpversion
        run: bumpversion ${{ github.event.inputs.versionName }} -- verbose

      - name: Ensure tag creation
        run: git tag | grep ${{ github.event.inputs.versionName }}

      - name: Push changes with tags
        run: git push && git push --tags

      - name: Build package
        run: |
          rm -f dist/*
          python setup.py sdist bdist_wheel

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

      - name: Ensure complete
        run: echo "Auto-release complete!"
